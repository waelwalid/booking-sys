version: '3.8'
services:
  node14:
    build:
      context: docker
      dockerfile: node14.Dockerfile
    image: local/node14
    

  booking:
    image: local/node14:latest
    container_name: booking
    depends_on:
      - node14
      - mysqldb
    volumes:
      - './:/var/www/app'
    restart: always
    networks:
      booksys:
        ipv4_address: 172.32.0.2
        aliases:
          - booking.local
    command: >
      bash -c "
      cp .env.example .env
      && npm run migration:up
      && npm install
      && npm run start"

  # postgresdb:
  #   container_name: postgresdb
  #   image: postgres:14.1-alpine
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   ports:
  #     - '5432:5432'
  #   volumes: 
  #     - ./docker/entrypoint/postgress.sql:/docker-entrypoint-initdb.d/booking_service.sql
  #   networks:
  #    booksys:
  #       ipv4_address: 172.32.0.3
  #       aliases:
  #         - postgresdb.local

  mysqldb:
    container_name: mysqldb
    restart: always
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      # - 'mysqldb:/var/lib/mysql'
      - ./docker/entrypoint/mysql.sql:/docker-entrypoint-initdb.d/booking_service.sql
    ports:
      - '3306:3306'
      - '2206:22'
    networks:
     booksys:
        ipv4_address: 172.32.0.4
        aliases:
          - mysqldb.local
networks:
  booksys:
    ipam:
      driver: default
      config:
        - subnet: 172.32.0.0/24